* hledger: Make It So

Inspired by the structure and ideas of [[https://github.com/adept/full-fledged-hledger/wiki][adept's Full-fledged Hledger]].

** Goals

Adept's goals resonated with me:

- Tracking expenses should take as little time, effort and manual work as possible

- Eventual consistency should be achievable: even if I can't record something precisely right now, maybe I would be able to do it later, so I should be able to leave things half-done and pick them up later

- Ability to refactor is a must. I want to be able to go back and change the way I am doing things, with as little effort as possible and without fear of irrevocably breaking things.

** How to Use It

*** Directory Structure

*** The Rules File
    - We'll first look for a rules file per bank in =import/mybank/mybank.rules=. This can be used for all =mybank= accounts.
    - If a rules file specific to the account exists, it will be used instead for all statements of that account.
      The file has to be in the account's directory and named after the account, e.g. =import/mybank/savings/mybank-savings.rules=.
    - You can further use a more specific rules file that is used only for some statements.
      If you add a prefix, seperated by an underscore (=_=), to your input file name, and also have a rules file with that prefix
      as its name, then we'll use that rules file instead.
      For example: assuming you've downloaded a specific statement from Mint as opposed to your bank, and named it =mint_99966633_20171223_1844.csv=.
      We will look for the rules file in the following places:
      - First, in the account directory, e.g. =import/mybank/savings/mint.rules=
      - Then, in the bank's directory, e.g. =import/mybank/mint.rules=
      - Lastly in the import directory, e.g. =import/mint.rules=
