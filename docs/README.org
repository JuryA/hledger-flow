#+STARTUP: showall
#+TITLE: hledger-makeitso: Step By Step
#+AUTHOR:
#+REVEAL_TRANS: default
#+REVEAL_THEME: beige
#+OPTIONS: num:nil
#+PROPERTY: header-args:sh :prologue exec 2>&1 :epilogue echo :

* About This Document

This document is a [[https://www.offerzen.com/blog/literate-programming-empower-your-writing-with-emacs-org-mode][literate]] [[https://orgmode.org/worg/org-contrib/babel/intro.html][program]].
You can read it like a normal article, either [[https://github.com/apauley/hledger-makeitso/blob/master/docs/README.org][on the web]] or [[https://pauley.org.za/hledger-makeitso/][as a slide show]].

But you can also [[https://github.com/apauley/hledger-makeitso][clone the repository]] and open [[https://raw.githubusercontent.com/apauley/hledger-makeitso/master/docs/README.org][this org-mode file]] in emacs.
Then you can execute each code snippet by pressing =C-c C-c= with your cursor on the relevant code block.

* The Story of an African Chef

Meet Gawie de Groot. Gawie is a successful [[https://en.wikipedia.org/wiki/Gonimbrasia_belina#As_food][mopane worm]] chef, based in the northernmost section of the [[https://en.wikipedia.org/wiki/Kruger_National_Park][Kruger National Park]].

In the past he used to work in a big city as an IT professional, but after a few years of this he decided to choose a quieter life
in the bushveld.

He now works at a renowned bush restaurant aptly named the "=Grillerige Groen Goggatjie=".

#+REVEAL: split

Demand for his traditional African cuisine has sky-rocketed, with visitors from all over Zimbabwe, Mozambique and South Africa
coming to enjoy his dishes.

Business has been good the last few years, but Gawie wants to make sure that he'll also be OK when business is down.

It is time for Gawie to take charge of his finances.

* Part 1: The First CSV Statement

Gawie followed the [[https://github.com/apauley/hledger-makeitso#build-instructions][build instructions]] and ended up with his very own =hledger-makeitso= executable.

#+REVEAL: split

Let's just run this =hledger-makeitso= command and see what happens...

#+NAME: hm-noargs
#+BEGIN_SRC sh :results output :exports both
hledger-makeitso
#+END_SRC

#+RESULTS: hm-noargs
#+begin_example
Manage your hledger CSV imports and classification:
https://github.com/apauley/hledger-makeitso#readme

Usage: hledger-makeitso (import | report)

Available options:
  -h,--help                Show this help text

Available commands:
  import                   Converts CSV transactions into categorised journal files
  report                   Generate Reports

#+end_example

Well OK, at least it prints some helpful output.

#+REVEAL: split

Gawie wants to import his CSV statements.

Luckily the =import= subcommand has a bit of help text as well:

#+NAME: hm-import-help
#+BEGIN_SRC sh :results org :exports both
hledger-makeitso import --help
#+END_SRC

#+RESULTS: hm-import-help
#+BEGIN_SRC org
Usage: hledger-makeitso import [BASEDIR]
  Converts CSV transactions into categorised journal files

Available options:
  BASEDIR                  The hledger-makeitso base directory
  -h,--help                Show this help text

#+END_SRC

#+REVEAL: split

Gawie starts by creating a new directory specifically for his hledger journals:

#+NAME: rm-fin-dir
#+BEGIN_SRC sh :results none :exports results
rm -rf my-finances
#+END_SRC

#+NAME: new-fin-dir
#+BEGIN_SRC sh :results none :exports both
mkdir my-finances
#+END_SRC

Now he can point the import to his new finances directory:
#+NAME: import1
#+BEGIN_SRC sh :results org :exports both
hledger-makeitso import ./my-finances
#+END_SRC

#+REVEAL: split

Hmmm, an error:
#+RESULTS: import1
#+BEGIN_SRC org
I couldn't find a directory named "import" underneath ./my-finances

hledger-makitso expects to find its input files in specifically
named directories.

Have a look at the documentation for a detailed explanation:
https://github.com/apauley/hledger-makeitso#how-to-use-it

#+END_SRC

Gawie carefully interprets the error message using the skills he obtained during his years as an IT professional.

He concludes that =hledger-makeitso= expects to find its input files in specifically named directories.

#+REVEAL: split

Looking at the documentation he sees there should be an =import= directory,
and under that a directory named after a bank, followed by a directory for the account and so on.

#+REVEAL: split

Gawie's salary is deposited into his cheque account at =Bogart Bank=, so this seems like a good account to start with:

#+NAME: first-input-file
#+BEGIN_SRC sh :results none :exports both
mkdir -p my-finances/import/bogart/cheque/1-in/2016/
cp Downloads/Bogart/123456789_2016-03-30.csv \
  my-finances/import/bogart/cheque/1-in/2016/
#+END_SRC

#+REVEAL: split

Let's see what our tree structure looks like now:
#+NAME: tree-after-1st-file
#+BEGIN_SRC sh :results org :exports both
tree my-finances/
#+END_SRC

#+RESULTS: tree-after-1st-file
#+BEGIN_SRC org
my-finances/
└── import
    └── bogart
        └── cheque
            └── 1-in
                └── 2016
                    └── 123456789_2016-03-30.csv

5 directories, 1 file

#+END_SRC

#+REVEAL: split

It is time to add what we have to source control.

#+NAME: git-init
#+BEGIN_SRC sh :results none :exports both
cd my-finances/
git init .
git add .
git commit -m 'Initial commit'
cd ..
#+END_SRC

#+REVEAL: split

Let's try the import again:
#+NAME: import2
#+BEGIN_SRC sh :results org :exports both
hledger-makeitso import ./my-finances
#+END_SRC

#+RESULTS: import2
#+BEGIN_SRC org
I couldn't find an hledger rules file at
./my-finances/import/bogart/cheque/bogart-cheque.rules

hledger-makitso looks for a rules file in a select few places.

The documentation will tell you everything you need to know:
https://github.com/apauley/hledger-makeitso#how-to-use-it

#+END_SRC

#+REVEAL: split

Another cryptic error.

This one is caused by a missing [[http://hledger.org/csv.html][rules file]] at

=./my-finances/import/bogart/cheque/bogart-cheque.rules=

#+REVEAL: split

After looking through the [[http://hledger.org/csv.html][hledger documentation on CSV rules files]],
Gawie concludes that the dates in Bogart Bank's CSV statement is incompatible with basic logic, reason and decency.

Luckily he isn't the only one suffering at the hands of bureaucratic incompetence: someone else has already written [[https://github.com/apauley/fnb-csv-demoronizer][a script]] to
fix stupid dates like those used by Bogart Bank.

#+REVEAL: split

This looks like a job for a [[https://github.com/apauley/hledger-makeitso#the-preprocess-script][preprocess script]].
Maybe we can get away with just a symbolic link...

#+REVEAL: split

Gawie adds the CSV transformation script as a submodule to his repository:

#+NAME: git-submodule-demoronizer
#+BEGIN_SRC sh :results none :exports both
cd my-finances/
git submodule add https://github.com/apauley/fnb-csv-demoronizer.git
git commit -m 'Added submodule: fnb-csv-demoronizer'
cd ..
#+END_SRC

#+REVEAL: split

=hledger-makeitso= looks for a file named [[https://github.com/apauley/hledger-makeitso#the-preprocess-script][preprocess]] in the account directory.

#+REVEAL: split

Gawie just creates a symbolic link named =preprocess=.
This works because the downloaded script takes an input file and an output file as the first two positional arguments,
very much as the =preprocess= script would expect.
And luckily it ignores the other parameters that =hledger-makeitso= sends through.

#+REVEAL: split

#+NAME: symlink-demoronizer
#+BEGIN_SRC sh :results none :exports both
cd my-finances/import/bogart/cheque
ln -s ../../../fnb-csv-demoronizer/fnb-csv-demoronizer preprocess
#+END_SRC

Now when we try the import again, it still displays an error due to our missing rules file.
But this time we can see that our statement was preprocessed:

#+REVEAL: split

#+NAME: import3
#+BEGIN_SRC sh :results none :exports both
hledger-makeitso import ./my-finances
#+END_SRC

#+NAME: head-preprocess
#+BEGIN_SRC sh :results org :exports both
head -n 2 my-finances/import/bogart/cheque/2-preprocessed/2016/123456789_2016-03-30.csv
#+END_SRC

#+RESULTS: head-preprocess
#+BEGIN_SRC org
"5","'Nommer'","'Datum'","'Beskrywing1'","'Beskrywing2'","'Beskrywing3'","'Bedrag'","'Saldo'","'Opgeloopte Koste'"
"5","1","2016-02-28","#Monthly Bank Fee","","","-500.00","40000.00",""

#+END_SRC

#+REVEAL: split

#+NAME: git-checkpoint-preprocess
#+BEGIN_SRC sh :results none :exports results
cd my-finances/
git add .
git commit -m 'The preprocessed CSV now has dates we can work with!'
cd ..
#+END_SRC

Now that we have sane dates in a CSV file, let's try to create a [[http://hledger.org/manual.html#csv-rules][rules file]]:
#+NAME: bogart-cheque-rules-file
#+BEGIN_SRC hledger :tangle my-finances/import/bogart/cheque/bogart-cheque.rules
skip 1

fields _, _, date, desc1, desc2, desc3, amount, balance, _

currency R
status *

account1 Assets:Current:Gawie:Bogart:Cheque
description %desc1/%desc2/%desc3
#+END_SRC

Gawie saves this file as =my-finances/import/bogart/cheque/bogart-cheque.rules=.

#+REVEAL: split

#+NAME: tangle-rules
#+BEGIN_SRC emacs-lisp :results none :exports results
; Narrator: this just tells emacs to write out the rules file. Carry on.
(org-babel-tangle-file (buffer-file-name))
#+END_SRC

#+NAME: git-checkpoint-rules
#+BEGIN_SRC sh :results none :exports results
cd my-finances/
git add .
git commit -m 'A CSV rules file'
cd ..
#+END_SRC

This time the import is successful, and we see a number of newly generated files:
#+NAME: import4
#+BEGIN_SRC sh :results org :exports both
hledger-makeitso import ./my-finances
tree my-finances
#+END_SRC

#+REVEAL: split

#+RESULTS: import4
#+BEGIN_SRC org
my-finances
├── fnb-csv-demoronizer
│   ├── fnb-csv-demoronizer
│   └── README.org
├── import
│   └── bogart
│       ├── bogart.journal
│       └── cheque
│           ├── 1-in
│           │   └── 2016
│           │       └── 123456789_2016-03-30.csv
│           ├── 2-preprocessed
│           │   └── 2016
│           │       └── 123456789_2016-03-30.csv
│           ├── 3-journal
│           │   └── 2016
│           │       └── 123456789_2016-03-30.journal
│           ├── bogart-cheque.journal
│           ├── bogart-cheque.rules
│           ├── opening.journal
│           └── preprocess -> ../../../fnb-csv-demoronizer/fnb-csv-demoronizer
└── import-all.journal

10 directories, 11 files

#+END_SRC

#+REVEAL: split

Bogart Bank's CSV file has been transformed into an =hledger= journal file.

This is the first transaction in the file:
#+NAME: head-1st-journal
#+BEGIN_SRC sh :results org :exports both
head -n 3 my-finances/import/bogart/cheque/3-journal/2016/123456789_2016-03-30.journal
#+END_SRC

#+RESULTS: head-1st-journal
#+BEGIN_SRC org
2016/02/28 * #Monthly Bank Fee//
    Assets:Current:Gawie:Bogart:Cheque        R-500.00 = R40000.00
    expenses:unknown                           R500.00

#+END_SRC

#+REVEAL: split

#+NAME: git-checkpoint-1st-journal
#+BEGIN_SRC sh :results none :exports results
cd my-finances/
git add .
git commit -m 'My first imported journal'
cd ..
#+END_SRC

Can hledger show us some data?

#+NAME: hledger-err-balance
#+BEGIN_SRC sh :results none :exports code
hledger -f my-finances/import-all.journal incomestatement
#+END_SRC

#+REVEAL: split

#+BEGIN_SRC hledger
hledger: balance assertion error in
"my-finances/import/bogart/cheque/3-journal/2016/123456789_2016-03-30.journal"
(line 2, column 56):

in transaction:
2016/02/28 * #Monthly Bank Fee//
    Assets:Current:Gawie:Bogart:Cheque    R-500.00 = R40000.00
    expenses:unknown                      R500.00
after posting:
    Assets:Current:Gawie:Bogart:Cheque    R-500.00
balance assertion details:
date:       2016/02/28
account:    Assets:Current:Gawie:Bogart:Cheque
commodity:  R
calculated: R-500.00
asserted:   R40000.00 (difference: +R40500.00)
#+END_SRC

#+REVEAL: split

Not yet - we have a balance assertion error.
=hledger= thinks the balance should be =-R500=, but our import asserted that it should be =R40000=.

#+REVEAL: split

Remember the =balance= field we added to the rules file?
#+NAME: balance-field-rules-file
#+BEGIN_SRC hledger
fields _, _, date, desc1, desc2, desc3, amount, balance, _
#+END_SRC

It adds a balance assertion to each transaction, using the data helpfully provided by Bogart Bank.

#+REVEAL: split

Clearly the cheque account has a pre-existing balance of =R40500=.
To make =hledger= happy, we need to tell it what the opening balance for this account is:
#+NAME: bogart-cheque-opening-balance
#+BEGIN_SRC hledger :tangle my-finances/import/bogart/cheque/opening.journal
2016-02-27 Cheque Account Opening Balance
    Assets:Current:Gawie:Bogart:Cheque              R40500
    Equity:Opening Balances:Gawie:Bogart:Cheque
#+END_SRC

Save this as =my-finances/import/bogart/cheque/opening.journal=.

#+REVEAL: split

Now we can try the income statement again.

#+NAME: hledger-incomestatement
#+BEGIN_SRC sh :results org :exports both
hledger -f my-finances/import-all.journal incomestatement \
  --pretty-tables
#+END_SRC

#+REVEAL: split

#+RESULTS: hledger-incomestatement
#+BEGIN_SRC org
Income Statement 2016/02/27-2016/03/25

                  ║ 2016/02/27-2016/03/25
══════════════════╬═══════════════════════
 Revenues         ║
──────────────────╫───────────────────────
 income:unknown   ║             R37256.28
──────────────────╫───────────────────────
                  ║             R37256.28
══════════════════╬═══════════════════════
 Expenses         ║
──────────────────╫───────────────────────
 expenses:unknown ║             R36734.43
──────────────────╫───────────────────────
                  ║             R36734.43
══════════════════╬═══════════════════════
 Net:             ║               R521.85

#+END_SRC

It worked!

* Part 2: Adding More Statements

Now that the all the boilerplate for the first statement has been done,
adding some more should be easy:

#+NAME: more-input-files
#+BEGIN_SRC sh :results org :exports both
cp --force Downloads/Bogart/123456789_2016*.csv \
  my-finances/import/bogart/cheque/1-in/2016/
hledger-makeitso import ./my-finances
hledger -f my-finances/import-all.journal incomestatement \
  --pretty-tables --monthly --average --begin 2016-03-01
#+END_SRC

#+REVEAL: split

#+RESULTS: more-input-files
#+BEGIN_SRC org
Income Statement 2016/03/01-2016/05/25

                  ║       Mar        Apr        May    Average
══════════════════╬════════════════════════════════════════════
 Revenues         ║
──────────────────╫────────────────────────────────────────────
 income:unknown   ║ R37256.28  R37256.28  R37256.28  R37256.28
──────────────────╫────────────────────────────────────────────
                  ║ R37256.28  R37256.28  R37256.28  R37256.28
══════════════════╬════════════════════════════════════════════
 Expenses         ║
──────────────────╫────────────────────────────────────────────
 expenses:unknown ║ R37284.66  R40333.49  R37234.43  R38284.19
──────────────────╫────────────────────────────────────────────
                  ║ R37284.66  R40333.49  R37234.43  R38284.19
══════════════════╬════════════════════════════════════════════
 Net:             ║   R-28.38  R-3077.21     R21.85  R-1027.91

#+END_SRC

#+REVEAL: split

Actually this doesn't look so good.
In March and April, Gawie spent more than he earned.

It is time to classify each transaction so that he can have a better view into
what is going on.
